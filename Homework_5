import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
from sklearn.linear_model import LinearRegression

iris_set = sns.load_dataset("iris")

class_feature_means = pd.DataFrame()
for c, rows in iris_set.groupby('species'):
    class_feature_means[c] = rows.mean()
class_feature_means

axes = plt.axes()
axes.set_xlim([4, 8])         
axes.set_ylim([0, 8])          
legend = []
plt.title('Линейная регрессия - Ирисы Фишера')
x_lable='sepal_length'
y_lable='petal_length'
axes.set_xlabel(x_lable)             
axes.set_ylabel(y_lable)  
for c, rows in iris_set.groupby('species'):
    plt.scatter(rows[x_lable], rows[y_lable])
    legend.append("species=%s" % c)
plt.legend(legend, loc="upper left")
plt.grid()
plt.show()

iris_set

iris_set = iris_set.drop(['sepal_width', 'petal_width'], axis=1)

seto = np.array(iris_set[iris_set.species == 'setosa'])
vers = np.array(iris_set[iris_set.species == 'versicolor'])

setosa = [[],[]]
for i in seto:
    setosa[0].append(i[0])
    setosa[1].append(i[1])
versicolor = [[],[]]
for i in vers:
    versicolor[0].append(i[0])
    versicolor[1].append(i[1])
    
mean_setosa = np.mean(setosa, axis=1).reshape(2,1)
mean_versicolor = np.mean(versicolor, axis=1).reshape(2,1)

scatter_setosa = np.dot((setosa-mean_setosa),(setosa-mean_setosa).T)
scatter_versicolor = np.dot((versicolor-mean_versicolor),(versicolor-mean_versicolor).T)

SW = scatter_setosa+scatter_versicolor
SW1=np.linalg.inv(SW)
w = np.dot(SW1, mean_setosa - mean_versicolor)

#Plot the data

fig, ax = plt.subplots()

ax.scatter(setosa[0],setosa[1],marker='s',c='grey',edgecolor='black')
ax.scatter(versicolor[0],versicolor[1],marker='^',c='yellow',edgecolor='black')

ax.scatter(mean_setosa[0],mean_setosa[1],marker='x',c='red',edgecolor='black')
ax.scatter(mean_versicolor[0],mean_versicolor[1],marker='x',c='red',edgecolor='black')

ax.plot((mean_setosa[0],mean_versicolor[0]), (mean_setosa[1],mean_versicolor[1] ))

mean=(mean_setosa+mean_versicolor)/2
mean1=mean+w/2
mean2=mean-w/2
ax.scatter(mean[0],mean[1],marker='x',c='red',edgecolor='black')
ax.plot((mean1[0],mean2[0]), (mean1[1],mean2[1] ), c='red' )

c=-w[0]/w[1]
u=np.array([1,c[0]]).reshape(2,1)
mean1=mean+u/2
mean2=mean-u/2
ax.plot((mean1[0],mean2[0]), (mean1[1],mean2[1] ), c='black' )

print(w)
plt.show()
